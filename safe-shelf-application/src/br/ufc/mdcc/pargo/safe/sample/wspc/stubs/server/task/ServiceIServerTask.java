
package br.ufc.mdcc.pargo.safe.sample.wspc.stubs.server.task;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServiceIServerTask", targetNamespace = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceIServerTask {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setPort", targetNamespace = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/", className = "br.ufc.mdcc.pargo.safe.sample.wspc.stubs.server.task.SetPort")
    @ResponseWrapper(localName = "setPortResponse", targetNamespace = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/", className = "br.ufc.mdcc.pargo.safe.sample.wspc.stubs.server.task.SetPortResponse")
    @Action(input = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/ServiceIServerTask/setPortRequest", output = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/ServiceIServerTask/setPortResponse")
    public void setPort(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "initialize", targetNamespace = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/", className = "br.ufc.mdcc.pargo.safe.sample.wspc.stubs.server.task.Initialize")
    @ResponseWrapper(localName = "initializeResponse", targetNamespace = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/", className = "br.ufc.mdcc.pargo.safe.sample.wspc.stubs.server.task.InitializeResponse")
    @Action(input = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/ServiceIServerTask/initializeRequest", output = "http://server.pc.backend.safe.pargo.mdcc.ufc.br/ServiceIServerTask/initializeResponse")
    public void initialize();

}
